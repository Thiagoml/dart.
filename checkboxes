import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

// Modelo para representar o item do cardápio
class MenuItem {
  final String name;
  bool isSelected;

  MenuItem({required this.name, this.isSelected = false});
}

// DAO para controlar o estado dos itens do cardápio
class MenuDAO extends ChangeNotifier {
  List<MenuItem> _menuItems = [
    MenuItem(name: 'Arroz e Feijão'),
    MenuItem(name: 'Frango Grelhado'),
    MenuItem(name: 'Bife de Carne'),
    MenuItem(name: 'Salada'),
    MenuItem(name: 'Sopa'),
    MenuItem(name: 'Macarrão à Bolonhesa'),
    MenuItem(name: 'Peixe Assado'),
    MenuItem(name: 'Hambúrguer'),
    MenuItem(name: 'Pizza'),
  ];

  List<MenuItem> get menuItems => _menuItems;

  void toggleSelection(int index) {
    _menuItems[index].isSelected = !_menuItems[index].isSelected;
    notifyListeners();
  }
}

// View para exibir o cardápio
class MenuListView extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final menuDAO = Provider.of<MenuDAO>(context);

    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Cardápio',
          style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
        ),
        backgroundColor: Colors.orangeAccent,
      ),
      body: Stack(
        children: [
          // Corpo do cardápio com padding para iniciar abaixo do ícone
          Padding(
            padding: const EdgeInsets.only(top: 130), // Ajuste para começar abaixo do ícone
            child: ListView.builder(
              itemCount: menuDAO.menuItems.length,
              itemBuilder: (context, index) {
                final menuItem = menuDAO.menuItems[index];
                return Column(
                  children: [
                    CheckboxListTile(
                      title: Text(menuItem.name, style: TextStyle(fontSize: 18)),
                      value: menuItem.isSelected,
                      onChanged: (bool? value) {
                        menuDAO.toggleSelection(index);
                      },
                      activeColor: Colors.orangeAccent,
                      controlAffinity: ListTileControlAffinity.leading,
                    ),
                    Divider(), // Separação entre os itens
                  ],
                );
              },
            ),
          ),

          // Ícone fora da faixa amarela (fora do AppBar)
          Positioned(
            top: 30, // Posiciona o ícone abaixo da faixa amarela
            left: MediaQuery.of(context).size.width / 2 - 50, // Centraliza o ícone horizontalmente
            child: Image.network(
              'https://cdn-icons-png.freepik.com/256/7064/7064359.png?semt=ais_hybrid',
              height: 100, // Tamanho do ícone
              fit: BoxFit.cover,
            ),
          ),
        ],
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          _showSelectedItemsDialog(context, menuDAO);
        },
        child: Icon(Icons.check),
        backgroundColor: Colors.orangeAccent,
      ),
    );
  }

  void _showSelectedItemsDialog(BuildContext context, MenuDAO menuDAO) {
    List<String> selectedItems = menuDAO.menuItems
        .where((item) => item.isSelected)
        .map((item) => item.name)
        .toList();

    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text("Itens Selecionados", style: TextStyle(fontSize: 20)),
          content: selectedItems.isEmpty
              ? Text("Nenhum item selecionado.", style: TextStyle(fontSize: 16))
              : Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisSize: MainAxisSize.min,
                  children: selectedItems
                      .map((item) => Text(item, style: TextStyle(fontSize: 16)))
                      .toList(),
                ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: Text(
                "Fechar",
                style: TextStyle(color: Colors.orangeAccent, fontSize: 16),
              ),
            ),
          ],
        );
      },
    );
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (_) => MenuDAO(),
      child: MaterialApp(
        title: 'Cardápio com Checkboxes',
        theme: ThemeData(
          primarySwatch: Colors.orange,
          visualDensity: VisualDensity.adaptivePlatformDensity,
        ),
        home: MenuListView(),
      ),
    );
  }
}
